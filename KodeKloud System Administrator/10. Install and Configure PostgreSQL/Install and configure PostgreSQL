#### Documentation to be cleaned up!

The Nautilus application development team has shared that they are planning to deploy one newly developed application on Nautilus infra in Stratos DC. The application uses PostgreSQL database, so as a pre-requisite we need to set up PostgreSQL database server as per requirements shared below:



a. Install and configure PostgreSQL database on Nautilus database server.

b. Create a database user kodekloud_cap and set its password to ksH85UJjhb.

c. Create a database kodekloud_db8 and grant full permissions to user kodekloud_cap on this database.

d. Make appropriate settings to allow all local clients (local socket connections) to connect to the kodekloud_db8 database through kodekloud_cap user using md5 method (Please do not try to encrypt password with md5sum).

e. At the end its good to test the db connection using these new credentials from root user or server's sudo user.



thor@jump_host ~$ ssh peter@172.16.239.10
peter@172.16.239.10's password: 
Last login: Fri Nov  4 11:09:00 2022 from jump_host.linux-postgresql-v2_db_net
[peter@stdb01 ~]$ sudo su
[sudo] password for peter: 
[root@stdb01 peter]# 





[peter@stdb01 ~]$ sudo yum install dnf
Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.grid.uchicago.edu
 * extras: ftp.ussg.iu.edu
 * updates: mirrors.gigenet.com
base                                                                  | 3.6 kB  00:00:00     
extras                                                                | 2.9 kB  00:00:00     
updates         

List out the available streams for the postgresql module using the yum command:

You can see in this output that there is one version of PostgreSQL available from the AppStream repository: 9.2


[peter@stdb01 ~]$ sudo yum list postgresql-server
Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.grid.uchicago.edu
 * extras: ftp.ussg.iu.edu
 * updates: mirrors.gigenet.com
Available Packages
postgresql-server.x86_64                        9.2.24-8.el7_9                        updates
[peter@stdb01 ~]$ 


install the postgresql-server package to install PostgreSQL and all of its dependencies:


[peter@stdb01 ~]$ sudo yum install postgresql-server
Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
You need to be root to perform this command.
[peter@stdb01 ~]$ sudo yum install postgresql-server
Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirror.grid.uchicago.edu
 * extras: ftp.ussg.iu.edu
 * updates: mirrors.gigenet.com
Resolving Dependencies






You have to create a new PostgreSQL database cluster before you can start creating tables and loading them with data. A database cluster is a collection of databases that are managed by a single server instance. Creating a database cluster consists of creating the directories in which the database data will be placed, generating the shared catalog tables, and creating the template1 and postgres databases.


The Postgres package we installed in the previous step comes with a handy script called postgresql-setup which helps with low-level database cluster administration. To create a database cluster, run the script using sudo and with the --initdb option:

[peter@stdb01 ~]$ sudo /usr/bin/postgresql-setup initdb
Initializing database ... OK

[peter@stdb01 ~]$ 



use systemctl once more to enable the service to start up whenever the server boots:

peter@stdb01 ~]$ sudo systemctl enable postgresql
Created symlink from /etc/systemd/system/multi-user.target.wants/postgresql.service to /usr/lib/systemd/system/postgresql.service.
[peter@stdb01 ~]$ 

start the PostgreSQL service using systemctl:


[peter@stdb01 ~]$ sudo systemctl enable postgresql
Created symlink from /etc/systemd/system/multi-user.target.wants/postgresql.service to /usr/lib/systemd/system/postgresql.service.
[peter@stdb01 ~]$ sudo systemctl status postgresql
● postgresql.service - PostgreSQL database server
   Loaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; vendor preset: disabled)
   Active: inactive (dead)
[peter@stdb01 ~]$ sudo systemctl start postgresql
[peter@stdb01 ~]$ sudo systemctl status postgresql
● postgresql.service - PostgreSQL database server
   Loaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; vendor preset: disabled)
   Active: active (running) since Sat 2022-11-05 06:18:19 UTC; 6s ago
  Process: 1198 ExecStart=/usr/bin/pg_ctl start -D ${PGDATA} -s -o -p ${PGPORT} -w -t 300 (code=exited, status=0/SUCCESS)
  Process: 1193 ExecStartPre=/usr/bin/postgresql-check-db-dir ${PGDATA} (code=exited, status=0/SUCCESS)
   CGroup: /docker/1ffcc7f5251bfdfee1d033ab264406e217016e5963f2b844b3c628b51f6b24aa/system.slice/postgresql.service
           ├─1200 /usr/bin/postgres -D /var/lib/pgsql/data -p 5432
           ├─1201 postgres: logger process   
           ├─1203 postgres: checkpointer process   
           ├─1204 postgres: writer process   
           ├─1205 postgres: wal writer process   
           ├─1206 postgres: autovacuum launcher process   
           └─1207 postgres: stats collector process   

Nov 05 06:18:18 stdb01.stratos.xfusioncorp.com systemd[1]: Starting PostgreSQ...
Nov 05 06:18:18 stdb01.stratos.xfusioncorp.com pg_ctl[1198]: LOG:  could not ...
Nov 05 06:18:18 stdb01.stratos.xfusioncorp.com pg_ctl[1198]: HINT:  Is anothe...
Nov 05 06:18:19 stdb01.stratos.xfusioncorp.com systemd[1]: Started PostgreSQL...
Hint: Some lines were ellipsized, use -l to show in full.
[peter@stdb01 ~]$ 




[peter@stdb01 ~]$ sudo systemctl status postgresql
● postgresql.service - PostgreSQL database server
   Loaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; vendor preset: disabled)
   Active: active (running) since Fri 2022-11-04 11:24:02 UTC; 7s ago
  Process: 1565 ExecStart=/usr/bin/pg_ctl start -D ${PGDATA} -s -o -p ${PGPORT} -w -t 300 (code=exited, status=0/SUCCESS)
  Process: 1560 ExecStartPre=/usr/bin/postgresql-check-db-dir ${PGDATA} (code=exited, status=0/SUCCESS)
 Main PID: 1567 (postgres)
   CGroup: /docker/07b7c276f543be23e291ef7cded2f00c2ad12e616c703d70d8c1f42381431287/system.slice/postgresql.service
           ├─1567 /usr/bin/postgres -D /var/lib/pgsql/data -p 5432
           ├─1568 postgres: logger process   
           ├─1570 postgres: checkpointer process   
           ├─1571 postgres: writer process   
           ├─1572 postgres: wal writer process   
           ├─1573 postgres: autovacuum launcher process   
           └─1574 postgres: stats collector process   

Nov 04 11:24:01 stdb01.stratos.xfusioncorp.com systemd[1]: Starting PostgreSQL database s....
Nov 04 11:24:01 stdb01.stratos.xfusioncorp.com pg_ctl[1565]: LOG:  could not bind IPv6 so...s
Nov 04 11:24:01 stdb01.stratos.xfusioncorp.com pg_ctl[1565]: HINT:  Is another postmaster....
Nov 04 11:24:02 stdb01.stratos.xfusioncorp.com systemd[1]: Started PostgreSQL database se....
Hint: Some lines were ellipsized, use -l to show in full.
[peter@stdb01 ~]$ 


PostgreSQL uses a concept called roles to handle client authentication and authorization. 

Switching Over to the postgres Account

[peter@stdb01 ~]$ sudo -i -u postgres
-bash-4.2$ 

You can now access a Postgres prompt immediately by typing: psql. This will log you into the PostgreSQL prompt, and from here you are free to interact with the database management system right away.

-bash-4.2$ psql
psql (9.2.24)
Type "help" for help.

Exit out of the PostgreSQL prompt by typing: \q

postgres=# \q
-bash-4.2$ exit
logout
[peter@stdb01 ~]$ 


Creating a New Role

[peter@stdb01 ~]$ sudo -u postgres createuser --interactive
could not change directory to "/home/peter"
Enter name of role to add: kodekloud_aim
Shall the new role be a superuser? (y/n) y
[peter@stdb01 ~]$ 


Creating a New Database



[peter@stdb01 ~]$ sudo -u postgres createdb kodekloud_db10
could not change directory to "/home/peter"
[peter@stdb01 ~]$ 


To log in with ident-based authentication, you’ll need a Linux user with the same name as your Postgres role and database.

If you don’t have a matching Linux user available, you can create one with the adduser command. You will have to do this from your non-root account with sudo privileges (meaning, not logged in as the postgres user):


[peter@stdb01 ~]$ sudo useradd kodekloud_aim

[peter@stdb01 ~]$ sudo passwd kodekloud_aim
Changing password for user kodekloud_aim.
New password: 
Retype new password: 
passwd: all authentication tokens updated successfully.
[peter@stdb01 ~]$ 


[peter@stdb01 ~]$ sudo -i -u postgres
-bash-4.2$ 
-bash-4.2$ 
-bash-4.2$ createdb kodekloud_aim
-bash-4.2$ 




[peter@stdb01 ~]$ sudo -i -u postgres
-bash-4.2$ psql
psql (9.2.24)
Type "help" for help.

postgres=# create user kodekloud_aim
postgres-# alter user kodekloud_aim password '8FmzjvFU6S'
postgres-# 




postgres-# create database kodekloud_db10
postgres-# 



postgres-# create database kodekloud_db10
postgres-# create user kodekloud_aim
postgres-# grant all privileges on database 
postgres-# grant all privileges on database kodekloud_db10 to kodekloud_aim




postgres=# CREATE USER kodekloud_cap WITH PASSWORD 'ksH85UJjhb';
CREATE ROLE
postgres=# 

postgres=# CREATE DATABASE kodekloud_db8 WITH OWNER kodekloud_cap;
CREATE DATABASE
postgres=# 




postgres=# \l+
                                                                        List of databases
     Name      |     Owner     | Encoding |   Collate   |    Ctype    |   Access privileges   |  Size   | Tablespace |                Description                 
---------------+---------------+----------+-------------+-------------+-----------------------+---------+------------+--------------------------------------------
 kodekloud_db8 | kodekloud_cap | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                       | 6121 kB | pg_default | 
 postgres      | postgres      | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                       | 6229 kB | pg_default | default administrative connection database
 template0     | postgres      | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +| 6113 kB | pg_default | unmodifiable empty database
               |               |          |             |             | postgres=CTc/postgres |         |            | 
 template1     | postgres      | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +| 6121 kB | pg_default | default template for new databases
               |               |          |             |             | postgres=CTc/postgres |         |            | 
(4 rows)





postgres=# \du
                               List of roles
   Role name   |                   Attributes                   | Member of 
---------------+------------------------------------------------+-----------
 kodekloud_cap |                                                | {}
 postgres      | Superuser, Create role, Create DB, Replication | {}

postgres=# 
postgres=# 

postgres=# \password postgres
Enter new password: 
Enter it again: 
postgres=# 



[peter@stdb01 ~]$ sudo ls /var/lib/pgsql/data/
base         pg_ident.conf  pg_serial     pg_tblspc    postgresql.conf
global       pg_log         pg_snapshots  pg_twophase  postmaster.opts
pg_clog      pg_multixact   pg_stat_tmp   PG_VERSION   postmaster.pid
pg_hba.conf  pg_notify      pg_subtrans   pg_xlog
[peter@stdb01 ~]$ 

[peter@stdb01 ~]$ sudo vi /var/lib/pgsql/data/pg_hba.conf
[peter@stdb01 ~]$ 


[peter@stdb01 ~]$ sudo cat /var/lib/pgsql/data/pg_hba.conf | grep peer
# "krb5", "ident", "peer", "pam", "ldap", "radius" or "cert".  Note that
local   all             all                                     peer
#local   replication     postgres                                peer
[peter@stdb01 ~]$ sudo cat /var/lib/pgsql/data/pg_hba.conf | grep peer


[peter@stdb01 ~]$ sudo cat /var/lib/pgsql/data/pg_hba.conf | grep peer
# "krb5", "ident", "peer", "pam", "ldap", "radius" or "cert".  Note that
#local   replication     postgres                                peer
[peter@stdb01 ~]$ sudo cat /var/lib/pgsql/data/pg_hba.conf | grep md5
# METHOD can be "trust", "reject", "md5", "password", "gss", "sspi",
# "password" sends passwords in clear text; "md5" is preferred since
local   all             all                                     md5
[peter@stdb01 ~]$




